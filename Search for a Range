class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans = new int[2];
        ans[0] = leftBound(nums, target);
        ans[1] = rightBound(nums, target);
        return ans;
    }
    public int leftBound(int[] nums, int target) {
        int left = 0, right = nums.length;
        while(left < right) {
            int mid = left + (right - left) / 2;
            if(nums[mid] > target) {
                right = mid;
            } else if(nums[mid] < target) {
                left = mid + 1;
            } else if(nums[mid] == target) {
                right = mid;
            }
        }
        if(left >= nums.length || nums[left] != target) {
            return -1;
        }
        return left;
    }
    public int rightBound(int[] nums, int target) {
        int left = 0, right = nums.length;
        while(left < right) {
            int mid = left + (right - left) / 2;
            if(nums[mid] > target) {
                right = mid;
            } else if(nums[mid] < target) {
                left = mid + 1;
            } else if(nums[mid] == target) {
                left = mid + 1;
            }
        }
        if(right - 1 < 0 || nums[right - 1] != target) {
            return -1;
        }
        return right - 1;
    }
}
